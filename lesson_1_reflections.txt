How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    You can easily find how the file was when it was properly working and what has been introduced. Checking the modified/introduced lines is easier to find a bug.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It is easier to understand why something was done.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    HAving versions automatically saved has the pro that you won't forget to commit it is automatically made. And the cons is that you can have many unmodified versions or you can lose some important changes.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because Google Docs isn't thought to work with very related files at the same time, it isn't specifically made for programming, where it is essencial to have all the related files at the same point.

How can you use the commands git log and git diff to view the history of files?

    With git log we can see all the different commits and we can check the modified lines between two commits using git diff (last commit) (previous one)

How might using version control make you more confident to make changes that
could break something?

    By allowing to return to the previous state, before any changes where made.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here